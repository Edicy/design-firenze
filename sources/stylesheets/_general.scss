/* GENERAL */
// Styling rules for the basic parts of the page. These rules affect the entire site.
html,
body {
  height: 100% !important;

  .editmode & {
    height: calc(100% - 40px) !important;
    height: -webkit-calc(100% - 40px) !important;
  }
}

html {
  &.search-open {
    height: 100%;
    overflow: hidden;
  }
}

body {
  margin: 0;
  font-family: $font-one;
  font-weight: 400;
  font-size: 14px;
  line-height: 1.4;
  @include color($primary-color);

  .search-open & {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;
  }

  @include query($large-1, 'min-width') {
    font-size: #{round(round(14 * $wide-view-multiplier))}px;
  }
}

a {
  text-decoration: none;

  img {
    border: none;
  }
}

// Pseudo classes for declaring commonly used styling rules for different elements.
%clearfix:after {
  content: '';
  display: table;
  clear: both;
}

%stretch {
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

%button {
  margin: 0;
  padding: 0;
  background: none;
  border: none;
  cursor: pointer;

  &::-moz-focus-inner {
    padding: 0;
    border: none;
  }

  &:focus {
    outline: none;
  }
}

// Styling rules for the independent elements that can be located everywhere in the DOM and always have the same styling rules.
.bgpicker-btn {
  @extend %button;
  position: absolute;
}

.body-background-image,
.body-background-color {
  position: fixed;
  z-index: -2;
}

.body-background-image {
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-size: cover;
  background-position: center center;
}

.body-background-color {
  @extend %stretch;
}

// Styling rules for the main container that affects the entire site's other elements.
.container {
  display: flex;
  position: relative;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 100%;
  min-height: 100%;
  box-sizing: border-box;

  .no-flexbox & {
    display: table;
    margin: 0 auto;
    width: 100%;
    height: 100%;
  }

  &.container-long {
    justify-content: flex-end;
    height: auto;

    .no-flexbox & {
      &,
      .container-inner {
        display: block;
      }
    }
  }

  .wrap {
    padding: 25px;

    @include query($large-1, 'min-width') {
      padding: #{round(25 * $wide-view-multiplier)}px;
    }

    .content-page & {
      position: relative;
      z-index: 1;
      max-width: 650px;
      margin-left: auto;
      margin-right: auto;
      @include bg($white);

      @include query($large-1, 'min-width') {
        max-width: #{round(650 * $wide-view-multiplier)}px;
      }
    }
  }
}

.container-inner {
  width: 100%;
  box-sizing: border-box;

  .no-flexbox & {
    display: table-cell;
    height: 100%;
    vertical-align: middle;
  }

  .wrap {
    margin-top: 30px;

    @include query($large-1, 'min-width') {
      margin-top: #{round(30 * $wide-view-multiplier)}px;
    }
  }
}

.svg-spritesheet {
  display: none;
}

.page-content {
  margin-top: 50px;

  .flexbox & {
    flex: 1 0 auto;
  }
}

@media screen and (min-width: $mobile-1 + 1) {
  .content-illustrations {
    flex: 1;
    max-width: 520px;
    margin-right: 40px;
  }
}

.content-body {
  .item-page & {
    @media screen and (max-width: $mobile-1) {
      padding-top: 30px;
    }

    @media screen and (min-width: $mobile-1 + 1) {
      flex: 1;
    }
  }
}

.intro-content {
  padding-bottom: 50px;
}

.content-item-boxes {
  font-size: 0;
  line-height: 1.3;
}
@media screen and (min-width: 241px) and (max-width: $mobile) {
  .content-item-boxes {
    margin-right: -10px;
    margin-left: -10px;
  }
}
@media screen and (min-width: $mobile) {
  .content-item-boxes {
    margin-right: -15px;
    margin-left: -15px;
  }
}

.items-body {
  margin-bottom: 10px;
}
@media screen and (min-width: $mobile-1 + 1) {
  .items-body {
    display: flex;
  }
}

@keyframes rotation {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(359deg);
  }
}

.loader {
  position: absolute;
  top: 50%;
  left: 50%;
  z-index: 999;
  width: 20px;
  height: 20px;
  border-radius: 100%;
  opacity: 0;
  transition: opacity .3s;

  &::before {
    position: absolute;
    display: block;
    width: 100%;
    height: 100%;
    content: '';
    box-sizing: content-box;
  }

  .not-loaded &,
  .is-loaded & {
    margin-top: calc((20px / 2) * -1);
    margin-left: calc((20px / 2) * -1);
    border: 1px solid rgba($black, 0);
    animation: rotation .7s infinite linear;

    &::before {
      border-top: 1px solid rgba($black, 1);
      border-right: 1px solid transparent;
      border-bottom: 1px solid transparent;
      border-left: 1px solid transparent;
      border-radius: 100%;
    }
  }

  .not-loaded & {
    opacity: 1;
  }

  .is-loaded & {
    opacity: 0;
  }

  .with-error & {
    width: 30px;
    height: 30px;
    margin-top: -15px;
    margin-left: -15px;
    background-color: rgba($red, .7);
    opacity: 1;

    &::before,
    &::after {
      position: absolute;
      top: 14px;
      width: 22px;
      height: 2px;
      background-color: $white;
      border-radius: 2px;
      content: '';
    }


    &::before {
      left: 4px;
      transform: rotate(45deg);
    }

    &::after{
      right: 4px;
      transform: rotate(-45deg);
    }
  }
}